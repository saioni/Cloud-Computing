version: '2.0'

services:
  rmq:
    image: rabbitmq:3.8.3-alpine 
    container_name: rmq

  orch:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 25 && python orchestrator.py"
    volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    
    container_name: orchestrator
    ports:
    - "90:80"
    links:
    - rmq
    depends_on:
    - rmq
    restart: on-failure

  master:
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 30 && python master.py"
    volumes:
    - .:/code
    links:
    - rmq    
    container_name: master1
    depends_on:
    - rmq
    
    restart: on-failure

  
  slave:
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 30 && python slave.py"
    links:
    - rmq    
    
    depends_on:
    - rmq
    container_name: slave1
    
    restart: on-failure
    
  zoo:
    image: zookeeper
    restart: on-failure
    hostname: zoo
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
      
  shared_db:
    image: shared_db:latest
    build: 
      context: ./shared_db
    command: sh -c "sleep 40 && python shared_db.py"
    links:
      - rabbitmq
      - orchestrator
    depends_on:
      - rabbitmq
      - orchestrator
    volumes:
      - ./codedata:/code/sdb
    restart: on-failure
